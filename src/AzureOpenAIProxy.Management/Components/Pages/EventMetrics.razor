@page "/event/{eventId}/metrics"
@using AzureOpenAIProxy.Management.Database
@using AzureOpenAIProxy.Management.Services;

@namespace AzureOpenAIProxy.Management.Components.Pages


@if (Event is not null && ModelCounts is not null)
{
    <PageTitle>AI Proxy Metrics | @Event.EventCode</PageTitle>

    <MudStack>
        <MudLink Target="_blank" Href="@($"{Configuration["PlaygroundUrl"]}/event/{EventId}")">
            <MudText><strong>@Event.EventCode</strong></MudText>
        </MudLink>

        <MudStack Spacing="1">
            <MudText Typo="Typo.body1">Organizer: <strong>@Event.OrganizerName (@Event.OrganizerEmail)</strong></MudText>
            <MudText Typo="Typo.body1">When: <strong>@Event.StartTimestamp.ToString("yyyy-MMM-dd HH:mm") - @Event.EndTimestamp.ToString("yyyy-MMM-dd HH:mm") (@Event.TimeZoneLabel)</strong></MudText>
            <MudText Typo="Typo.body1">Max Token Cap: <strong>@Event.MaxTokenCap</strong> | Daily Request Cap: <strong>@Event.DailyRequestCap</strong></MudText>
            <MudText Typo="Typo.body1">Registrations: <strong>@AttendeeCount</strong> | Active Registrations: <strong>@ActiveRegistrations</strong></MudText>
            <MudText Typo="Typo.body1">Total Requests: <strong>@RequestCount</strong></MudText>
        </MudStack>

        <MudIconButton Icon="@Icons.Material.Filled.Refresh" Variant="Variant.Filled" Color="Color.Primary"
            Size="Size.Small" Style="width: 80px;" OnClick="RefreshData" />

        <MudChart ChartType="ChartType.Line" ChartSeries="@ActiveUsersChartSeries" XAxisLabels="@ActiveUsersChartLabels"
            Width="100%" Height="450px" />

        <MudChart ChartType="ChartType.Line" ChartSeries="@RequestChartSeries" XAxisLabels="@RequestChartLabels"
            Width="100%" Height="450px" />

        <MudTable Items="@ModelCounts" Dense="true" Striped="true" SortLabel="Sort By" Hover="true"
            Style="margin-bottom: 60px;">
            <HeaderContent>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<ModelCounts, object>(x => x.Resource)">
                        Resource Name (Deployment or Index Name)</MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<ModelCounts, object>(x => x.PromptTokens)">
                        Prompt tokens</MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<ModelCounts, object>(x => x.CompletionTokens)">
                        Completion tokens</MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<ModelCounts, object>(x => x.TotalTokens)">
                        Total tokens</MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel InitialDirection="SortDirection.Descending"
                        SortBy="new Func<ModelCounts, object>(x => x.Count)">
                        Requests</MudTableSortLabel>
                </MudTh>
            </HeaderContent>

            <RowTemplate>
                <MudTd DataLabel="Resource Name (Deployment or Index Name)">@context.Resource</MudTd>
                <MudTd DataLabel="Prompt tokens">@context.PromptTokens</MudTd>
                <MudTd DataLabel="Completion tokens">@context.CompletionTokens</MudTd>
                <MudTd DataLabel="Total tokens">@context.TotalTokens</MudTd>
                <MudTd DataLabel="Request Count">@context.Count</MudTd>
            </RowTemplate>
        </MudTable>
    </MudStack>
}
