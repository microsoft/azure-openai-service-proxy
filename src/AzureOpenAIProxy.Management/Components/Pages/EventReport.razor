@page "/reports"

@namespace AzureOpenAIProxy.Management.Components.Pages

<PageTitle>AI Proxy Reports</PageTitle>

@if (EventRegistrations?.Count > 0)
{
    <MudStack>

        <Help Title="Events Report" Link="https://microsoft.github.io/azure-openai-service-proxy/reporting/" />

        <MudStack Spacing="2" Row="true">
            <MudText Typo="Typo.body1">Total events: <strong>@EventCount</strong></MudText>
            <MudText Typo="Typo.body1">Total registrations: <strong>@TotalRegistations</strong></MudText>
        </MudStack>

        <MudTable Items="@EventRegistrations" Dense="true" Striped="true" SortLabel="Sort By" FixedHeader="true" Height="calc(80vh - 60px)"
            Filter="new Func<EventRegistrations,bool>(EventFilter)" Hover="true">
            <ToolBarContent>
                <MudTextField @bind-Value="searchString" Placeholder="Search by event or organizer name"
                    Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"/>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>
                    <MudTableSortLabel InitialDirection="SortDirection.Ascending"
                        SortBy="new Func<EventRegistrations, object>(x => x.EventName)">
                        Metrics</MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<EventRegistrations, object>(x => x.OrganizerName)">
                        Owner</MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<EventRegistrations, object>(x => x.StartDate)">
                        Start date</MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<EventRegistrations, object>(x => x.EndDate)">
                        End date</MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<EventRegistrations, object>(x => x.Registered)">
                        Regd</MudTableSortLabel>
                </MudTh>
                <MudTh>
                    Event
                </MudTh>
            </HeaderContent>

            <RowTemplate>
                <MudTd DataLabel="Metrics">
                    <MudLink Href="@($"/event/{context.EventId}/metrics")">@context.EventName</MudLink>
                </MudTd>
                <MudTd DataLabel="Owner">@context.OrganizerName</MudTd>
                <MudTd DataLabel="Start date">
                    <MudText Typo="Typo.body2" style="white-space: nowrap;">@context.StartDate.ToString("yyyy-MMM-dd")</MudText>
                </MudTd>
                <MudTd DataLabel="End date">
                    <MudText Typo="Typo.body2" style="white-space: nowrap;">@context.EndDate.ToString("yyyy-MMM-dd")</MudText>
                </MudTd>
                <MudTd DataLabel="Registered">@context.Registered</MudTd>
                <MudTd DataLabel="Attendee link">
                    <MudLink Target="_blank" Href="@($"{Configuration["PlaygroundUrl"]}/event/{context.EventId}")">
                        <MudIcon Icon="@Icons.Material.Filled.Link" />
                    </MudLink>
                </MudTd>
            </RowTemplate>
        </MudTable>
    </MudStack>
}
